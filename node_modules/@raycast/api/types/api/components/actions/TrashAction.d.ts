/// <reference types="node" />
import { PathLike } from "fs";
import { ReactElement } from "react";
import { Image } from "../../ui";
import { Keyboard } from "../../app";
/**
 * See {@link Action.Trash.Props}
 */
export interface TrashActionProps {
    /**
     * The item or items to move to the trash.
     */
    paths: PathLike | PathLike[];
    /**
     * An optional title for the action.
     * @defaultValue Move to Trash
     */
    title?: string;
    /**
     * A optional icon displayed for the action.
     * @defaultValue {@link Icon.Trash}
     */
    icon?: Image.ImageLike;
    /**
     * The optional keyboard shortcut for the action.
     */
    shortcut?: Keyboard.Shortcut;
    /**
     * Callback when all items were moved to the trash.
     *
     * @remarks
     * This is handy when you want to act on a trashed item, e.g. update a list.
     * The callback returns the same `paths` as passed originally.
     */
    onTrash?: (paths: PathLike | PathLike[]) => void;
}
/**
 * See {@link Action.Trash}
 */
export declare function TrashAction(props: TrashActionProps): ReactElement<TrashActionProps>;
export declare namespace TrashAction {
    var displayName: string;
}
