import { ReactNode } from "react";
/**
 * Return type of the {@link useNavigation} hook to perform push and pop actions.
 */
export interface Navigation {
    /**
     * Push a new view component to the navigation stack.
     *
     * @param component - The React component to push to the navigation stack.
     */
    push: (component: ReactNode) => void;
    /**
     * Pop current view component from the navigation stack.
     */
    pop: () => void;
}
/**
 * A hook that lets you push and pop view components in the navigation stack.
 *
 * @remarks
 * You most likely won't use this hook too often. To push a new component, use the {@link PushAction}.
 * When a user presses `ESC`, we automatically push to the previous component.
 *
 * @returns A {@link Navigation} object with {@link Navigation.push} and {@link Navigation.pop} functions.
 * Use the functions to alter the navigation stack.
 *
 * @example
 * ```typescript
 * import { ActionPanel, Detail, useNavigation, Action } from "@raycast/api";
 *
 * function Ping() {
 *   const { push } = useNavigation();
 *
 *   return (
 *     <Detail
 *       markdown="Ping"
 *       actions={
 *         <ActionPanel>
 *           <Action title="Push" onAction={() => push(<Pong />)} />
 *         </ActionPanel>
 *       }
 *     />
 *   );
 * }
 *
 * function Pong() {
 *   const { pop } = useNavigation();
 *
 *   return (
 *     <Detail
 *       markdown="Pong"
 *       actions={
 *         <ActionPanel>
 *           <Action title="Pop" onAction={pop} />
 *         </ActionPanel>
 *       }
 *     />
 *   );
 * }
 *
 * export default function Command() {
 *   return <Ping />;
 * }
 * ```
 */
export declare function useNavigation(): Navigation;
